import React, { useState, useEffect } from 'react';

import { Link } from 'react-router-dom';
import axios from 'axios';
import { createMedia } from '@artsy/fresnel'
import { useSelector, useDispatch } from 'react-redux';
import { listProducts } from '../actions/productActions';
import Rating from '../components/Rating';

import PropTypes from 'prop-types'
import '../css/cssanimation.min.css'
import '../css/woah.css'


import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'
import { faCoffee, faBook, faTimesCircle, faAddressBook, faKey, faEnvelope,
  faCarSide,
  faCalendar,
  faUser,
  faCreditCard,
  faMoneyBill,
  faMoneyBillWave,
  faMoneyCheck,
  faMoneyCheckAlt,
  faToolbox,
  faUpload,
  faFireExtinguisher,
  faOutdent,
  faTable,
  faTasks,
  faColumns,
  faSortNumericDown,
  faSortAmountUpAlt,
  faTrash,
  faCashRegister,
  faUserAlt,
  faFileWord,
  faGlobeAsia,
  faSearch,
  faCat,
  faSchool,
  faCodeBranch,
  faCode,
  faClock,
  faUserClock,
  faRocket,
  faHandRock,
  faNotesMedical,
  faMoneyBillWaveAlt

} from '@fortawesome/free-solid-svg-icons'

// import '../css/button.css'
 //import '../css/loading.css'

function HomeScreen(props) {
  var React = require('react')
  var FA = require('react-fontawesome')
  const [searchKeyword, setSearchKeyword] = useState('');
  var [sortOrder, setSortOrder] = useState('');
  const category = props.match.params.id ? props.match.params.id : '';
  const productList = useSelector((state) => state.productList);
  const { products, loading, error } = productList;
  var React = require('react')
var FA = require('react-fontawesome')
  const dispatch = useDispatch();
  useEffect(() => {
    dispatch(listProducts(category));

    return () => {
      //
    };
  }, [category]);

  const submitHandler = (e) => {
    e.preventDefault();
    dispatch(listProducts(category, searchKeyword, sortOrder));
  };
  const sortHandler = (e) => {
    console.log('当前值是'+sortOrder)
    // setSortOrder(e.target.value)
    // .then(()=>dispatch(listProducts(category, searchKeyword, sortOrder)))
    dispatch(listProducts(category, searchKeyword, sortOrder));
  };
  useEffect(()=>{
    if(sortOrder!='')
    {
      sortHandler()
    }
  },[sortOrder])

  return (
    
<>
<div className='home'>



<div className="Hero">

<br/>
  <div align='center' className='cssanimation bounceFromTop'><span className='titleFont'>Work more,</span></div>
  <div align='center' className='cssanimation bounceFromTop'><span className='titleFont'>Get more</span></div>
  {/* <p>一堆没有用的话哈哈哈哈</p> */}
  {/* <div class="cssanimation danceTop"> <h1>Example</h1> </div> */}
  {/* <div class="cssanimation spinToLeft"> <h1>Example</h1> </div> */}
  <br/><br/><br/>

  <div className="cssanimation rotateInLeft" align='center'> <span className='normalFont-2'>Developed by Xiaofeng Yin</span> </div>
  <div className="cssanimation rotateInRight" align='center'> <span className='normalFont-2'>SIT313 Final Project</span> </div>
  {/* <div class="cssanimation blurIn"> <h1>Example</h1> </div> */}
  {/* <div class="cssanimation bounceFromTop"> <h1>Example</h1> </div> */}

<div className='homePic'>
  <svg width="113" height="255" viewBox="0 0 113 255" fill="none" xmlns="http://www.w3.org/2000/svg">
<path opacity="0.4" d="M82.35 242.08C98.7617 235.188 108.84 221.919 104.86 212.442C100.881 202.966 84.3504 200.871 67.9387 207.763C51.527 214.655 41.4488 227.924 45.4283 237.401C49.4079 246.877 65.9383 248.972 82.35 242.08Z" fill="#D6D8E5"/>
<path opacity="0.4" d="M38.4425 215.406C52.741 209.402 61.5222 197.843 58.0558 189.588C54.5895 181.334 40.1882 179.511 25.8897 185.515C11.5912 191.52 2.81004 203.079 6.27641 211.333C9.74277 219.588 24.144 221.411 38.4425 215.406Z" fill="#D6D8E5"/>
<path d="M32.0028 2.88007C30.5228 0.510074 19.2328 -0.999922 15.5228 8.51008C14.1128 12.1401 14.3328 21.4101 13.1528 27.2401C11.9728 33.0701 9.15281 36.3601 8.15281 41.0901C7.15281 45.8201 8.78281 53.7401 20.1528 55.0901C31.5228 56.4401 40.3028 52.4901 42.9928 48.8601C45.6828 45.2301 45.7328 37.5101 42.9428 33.3701C40.1528 29.2301 38.0228 25.8501 38.0928 20.4501L32.0028 2.88007Z" fill="#3A2C6D"/>
<path d="M45.5326 42.92C45.5326 42.92 48.2126 61.8 43.1526 75.21C38.0926 88.62 39.4926 71.76 39.4926 71.76L40.7126 67.76C40.7126 67.76 41.7126 52.32 41.3126 48.54C40.9126 44.76 40.9826 41.54 40.7126 41.2C40.4426 40.86 41.7126 40.29 42.2526 40.2C42.7926 40.11 45.5326 42.92 45.5326 42.92Z" fill="#FFCEA9"/>
<path d="M24.5527 1.23005C24.5527 1.23005 33.0527 -1.21996 38.2027 3.38004C39.9085 4.94747 41.1503 6.95385 41.7923 9.17966C42.4342 11.4055 42.4517 13.765 41.8427 16C41.1527 18.69 39.7827 22.35 37.6427 22.56C35.5027 22.77 24.5527 1.23005 24.5527 1.23005Z" fill="#3A2C6D"/>
<path d="M21.303 24.42C21.303 24.42 21.863 33.89 21.683 34.59C21.503 35.29 17.963 35.96 16.973 36.79C15.983 37.62 22.123 47.22 25.253 48.65C28.383 50.08 38.053 46.43 38.723 41.65C39.343 37.22 35.953 33.77 34.653 32.57C33.7655 32.487 32.8735 32.4636 31.983 32.5L31.693 27.91C27.433 26.53 21.303 24.42 21.303 24.42Z" fill="#FFCEA9"/>
<path d="M41.313 56.37C41.313 58.37 41.063 61.43 40.873 63.63C40.773 64.84 40.683 65.81 40.643 66.21C40.6509 66.2731 40.6509 66.3369 40.643 66.4C31.353 72.16 19.853 67.22 19.853 67.22C19.473 66.47 19.073 65.63 18.653 64.66C17.573 62.22 16.313 58.98 14.653 54.66C12.333 48.51 13.433 40.5 13.873 38.8C14.293 37.34 17.343 35.92 20.003 35.51C23.093 37.23 25.003 41.57 34.653 44.51C39.153 40.15 32.653 32.51 32.653 32.51C33.5249 32.4402 34.4011 32.4402 35.273 32.51C42.563 39.67 49.873 48.88 41.313 56.37Z" fill="#F4F4F4"/>
<path d="M39.0026 12.6801C38.0026 6.59007 33.6426 1.99008 27.3726 2.36008C25.7845 2.45192 24.23 2.85602 22.7982 3.54928C21.3664 4.24253 20.0853 5.21132 19.0283 6.40021C17.9713 7.5891 17.1591 8.97475 16.6382 10.4779C16.1173 11.981 15.898 13.5721 15.9926 15.1601C16.1032 17.0086 16.6401 18.8065 17.5613 20.413C18.4825 22.0195 19.7631 23.391 21.3026 24.4201C21.5346 25.3416 21.8701 26.234 22.3026 27.0801C24.5326 29.6701 30.4426 31.3101 32.3926 31.3401C34.0726 31.3401 35.5326 29.7801 37.1126 27.1701C40.3526 21.7201 39.5226 15.6801 39.0026 12.6801Z" fill="#FFCEA9"/>
<path d="M25.433 2.47003C21.033 3.33003 17.433 4.57003 16.213 8.90003C15.393 11.9 14.323 17.55 15.343 19.9L15.973 21.63L21.313 24.38C21.313 24.38 23.803 22.3 23.023 16.23C23.0534 15.4053 23.3131 14.6054 23.773 13.92C24.1048 13.348 24.354 12.7319 24.513 12.09C25.141 10.4472 26.376 9.10834 27.963 8.35002C31.963 6.12002 37.753 8.04002 38.563 8.85002C37.4376 6.44238 35.519 4.49464 33.1286 3.33312C30.7382 2.1716 28.0213 1.86688 25.433 2.47003V2.47003Z" fill="#3A2C6D"/>
<path d="M13.5729 79.78C12.5729 73.61 10.7329 69.61 11.5729 66.22C13.4813 59.3462 15.9909 52.6537 19.0729 46.22C21.0229 42.38 20.4229 39.71 18.4029 38.22C16.1329 36.52 13.9629 37.22 11.9229 41.51C9.37286 46.85 6.43286 52.34 5.06286 60.3C4.37286 64.16 4.06286 67.91 5.25286 75.84C6.12286 81.39 7.89286 84.5 9.97286 89.71C10.5429 91.13 14.4329 85 13.5729 79.78Z" fill="#FFCEA9"/>
<path d="M17.4326 194.82C19.6626 196.64 23.1326 195.38 23.2926 195.55C25.5626 197.82 28.9426 199.8 31.4626 201.78C32.8526 202.88 35.0126 204.34 34.6226 206.44C33.9226 210.19 27.9126 209.04 25.6226 207.89C23.3326 206.74 21.5026 204.84 19.3526 203.5C17.8226 202.55 16.3526 202.06 16.0826 200.13C15.9426 199 17.0326 194.78 17.4326 194.82Z" fill="#38226D"/>
<path d="M16.1226 199.35C16.4126 201.2 17.9026 201.71 19.4226 202.65C21.6026 204.01 23.5226 205.96 25.7926 207.11C27.8826 208.17 33.1126 209.22 34.5826 206.54C33.7826 210.16 27.8726 209.03 25.6326 207.89C23.3926 206.75 21.5126 204.84 19.3626 203.5C17.8326 202.55 16.3626 202.06 16.0926 200.13C16.0696 199.87 16.0796 199.608 16.1226 199.35V199.35Z" fill="#9C73FF"/>
<path d="M33.063 191.7C35.063 193.36 38.183 192.43 38.333 192.58C40.413 194.66 43.493 196.45 45.793 198.27C47.063 199.27 49.053 200.61 48.693 202.53C48.053 205.97 42.543 204.91 40.463 203.86C38.383 202.81 36.693 201.06 34.723 199.86C33.323 198.99 31.943 198.54 31.723 196.77C31.593 195.68 32.693 191.66 33.063 191.7Z" fill="#38226D"/>
<path d="M31.7528 196C32.0228 197.7 33.3828 198.17 34.7528 199C36.7528 200.24 38.5128 202 40.5928 203.08C42.5028 204.08 47.2928 205.02 48.5928 202.57C47.8628 205.88 42.4528 204.84 40.3928 203.8C38.3328 202.76 36.6228 201 34.6528 199.8C33.2528 198.93 31.8728 198.48 31.6528 196.71C31.6638 196.471 31.6973 196.233 31.7528 196V196Z" fill="#9C73FF"/>
<path d="M45.0726 88C44.0726 80.32 41.2626 69.16 41.2626 69.16C38.5836 70.413 35.6865 71.133 32.7326 71.28C27.7326 71.53 19.8326 70.02 19.8326 70.02C18.4467 72.4336 16.9312 74.7704 15.2926 77.02C13.0826 80.1 8.77259 86.84 9.81259 98.61C10.4926 106.3 14.8126 138.97 14.8126 138.97C13.1287 144.493 12.2332 150.226 12.1526 156C12.1526 160.75 13.4526 168.83 14.8526 176.3L17.4326 194.82C17.4326 194.82 20.8526 197.29 23.2926 195.55L22.9926 177.4C23.2826 172.96 23.7226 166.4 23.9926 162.22C24.4526 155.41 25.6726 144.58 25.9926 141.88C26.3126 139.18 27.2126 134.46 27.6226 129.16C28.0326 123.86 30.0726 97 30.0726 97L30.3426 102C30.3426 102 30.6126 110.17 31.7826 120.26C32.9526 130.35 33.3726 134.82 33.3726 134.82C32.2623 136.856 31.4857 139.058 31.0726 141.34C30.8626 143.52 28.3726 160.77 29.8626 169.54L32.9226 191.85C33.6853 192.375 34.5616 192.711 35.4795 192.831C36.3974 192.951 37.3307 192.851 38.2026 192.54L40.0026 170.06C41.2026 161.5 43.7626 143.37 44.1526 141.06C44.6626 137.96 45.0926 136.43 45.6826 126.68C46.2726 116.93 46.0526 95.71 45.0726 88Z" fill="#FFCEA9"/>
<path d="M7.95264 49C7.95264 49 12.5526 53.57 18.0026 53L20.6126 44.09C20.6126 44.09 22.3226 39.43 18.3426 37.39C14.3626 35.35 10.2326 39.83 7.95264 49Z" fill="#EDEDED"/>
<path d="M35.293 32.5001C35.293 32.5001 40.553 30.9001 46.133 42.5501L44.043 43.8101C44.043 43.8101 38.553 35.5001 35.293 32.5001Z" fill="#EDEDED"/>
<path d="M45.153 140.91C44.863 143.47 44.663 145 44.663 145C42.587 146.986 40.1162 148.513 37.4112 149.481C34.7063 150.45 31.8278 150.838 28.963 150.62C19.683 150.18 11.603 145 11.603 145L12.203 141.39L13.573 133.27C3.10301 95.2701 13.203 80.5101 13.203 80.5101L18.723 69.4301L19.833 67.2201L20.703 67.4101C37.003 69.7301 40.493 66.4101 40.643 66.2101C40.643 66.2101 40.913 67.0201 41.353 68.5501C43.7215 76.8083 45.5454 85.213 46.813 93.7101C48.753 106.52 46.273 131.19 45.153 140.91Z" fill="#8C50FF"/>
<path d="M17.4329 194.82C18.5448 195.616 19.858 196.084 21.2229 196.17C21.9659 196.228 22.7038 196.007 23.2929 195.55L23.1929 189.31C22.1748 189.696 21.0912 189.88 20.0029 189.85C18.8666 189.917 17.7296 189.733 16.6729 189.31L17.4329 194.82Z" fill="#F4F6F9"/>
<path d="M32.9028 191.94C33.8864 192.586 35.036 192.934 36.2128 192.94C36.8974 192.995 37.5849 192.878 38.2128 192.6L38.7028 186.47C37.6573 186.856 36.5468 187.036 35.4328 187C34.3062 187.071 33.1782 186.886 32.1328 186.46L32.9028 191.94Z" fill="#F4F6F9"/>
<path d="M41.3628 68.54C37.6538 70.166 33.631 70.9514 29.5828 70.84C25.9173 70.8376 22.2674 70.3637 18.7228 69.43L19.8328 67.22C19.4528 66.47 19.0528 65.63 18.6328 64.66C24.1328 66.42 35.0728 67.53 40.8628 63.66C40.7628 64.87 40.6728 65.84 40.6328 66.24C40.6328 66.24 40.9228 67 41.3628 68.54Z" fill="#DD7A7A"/>
<path d="M104.073 72.25C104.473 75.72 108.603 90.68 107.713 95.8C106.823 100.92 92.7129 109.5 92.7129 109.5L90.7129 100.73L98.5329 93.06L96.4329 78.53L104.073 72.25Z" fill="#FFCEA9"/>
<path d="M105.433 77.16C105.145 77.5164 104.831 77.8507 104.493 78.16V78.21C103.509 79.1624 102.318 79.8743 101.013 80.29V80.29C100.111 80.5544 99.1613 80.6159 98.2327 80.47L97.6027 77.62L93.2227 57.46C94.5954 56.8221 96.1547 56.7111 97.604 57.1481C99.0533 57.5851 100.291 58.5396 101.083 59.83C102.253 61.75 103.433 66.26 104.283 70.24C104.883 73.45 105.353 76.26 105.433 77.16Z" fill="#434B5B"/>
<path d="M76.9928 224.32C73.9154 225.166 70.6287 224.767 67.8428 223.21C65.6428 223.28 53.6828 218.21 52.0528 222.46C50.6328 226.22 55.8128 229.71 58.5828 230.38C64.5828 231.84 69.0928 234.86 71.5128 235.38C73.3228 235.76 75.6628 236.01 77.1028 234.59C78.8328 232.87 78.6828 226.56 76.9928 224.32Z" fill="#C1C4D3"/>
<path d="M71.5129 234.32C69.0929 233.81 64.6229 230.8 58.5829 229.32C56.2629 228.75 52.2629 226.22 51.8629 223.19C51.3229 226.66 55.9929 229.73 58.5829 230.36C64.5829 231.82 69.0929 234.84 71.5129 235.36C73.3229 235.74 75.6629 235.99 77.1029 234.57C77.4814 234.157 77.7557 233.66 77.9029 233.12C77.0047 233.804 75.9593 234.268 74.8499 234.477C73.7406 234.685 72.5979 234.631 71.5129 234.32V234.32Z" fill="#A7ABB7"/>
<path d="M96.4328 215.61C93.3554 216.456 90.0686 216.057 87.2828 214.5C85.0828 214.57 73.1228 209.45 71.4928 213.74C70.0728 217.51 75.2528 221 78.0228 221.67C84.0228 223.13 88.5328 226.15 90.9528 226.67C92.7628 227.05 95.1028 227.3 96.5428 225.88C98.2328 224.16 98.0828 217.85 96.4328 215.61Z" fill="#C1C4D3"/>
<path d="M90.9129 225.61C88.4929 225.1 84.0229 222.09 77.9829 220.61C75.6629 220.04 71.6629 217.5 71.2629 214.48C70.7229 218 75.4329 221 77.9829 221.67C83.9829 223.13 88.4929 226.15 90.9129 226.67C92.7229 227.05 95.0629 227.3 96.5029 225.88C96.8796 225.466 97.1536 224.969 97.3029 224.43C96.4031 225.11 95.3569 225.571 94.2475 225.776C93.1382 225.981 91.9964 225.924 90.9129 225.61V225.61Z" fill="#A7ABB7"/>
<path d="M96.6326 183.11C96.1183 178.664 95.1944 174.276 93.8726 170C93.8726 170 94.6926 158.69 95.1026 148C95.5726 135.83 99.7926 125.12 96.4626 115.42L58.9326 123.76C58.9326 123.76 61.2026 172.25 61.7026 178.12C62.001 182.688 62.5787 187.233 63.4326 191.73C65.1426 201.15 67.9226 223.54 67.9226 223.54C71.9226 225.85 77.1026 224.54 77.1026 224.54C77.1026 224.54 76.8226 196.22 76.5626 189.44C76.2526 181.16 76.0026 181.79 76.0026 181.79L77.2426 161.16L78.0526 150.9C78.0526 150.9 79.0526 158.43 79.7626 165.16C80.3526 171.02 81.7626 176.33 83.3526 187.25C84.7226 196.72 86.9526 215.76 86.9526 215.76C90.9526 218.06 96.3126 216.15 96.3126 216.15C96.3126 216.15 97.7026 191.33 96.6326 183.11Z" fill="#916F5D"/>
<path d="M91.1526 57.7101C88.2926 57.8501 86.1526 58.5801 85.8026 57.7101C85.4941 56.2349 85.277 54.742 85.1526 53.2401C85.4826 52.4201 85.7626 51.5201 85.7626 51.5201C89.3526 49.3201 90.4926 45.4401 90.9626 40.9201C91.7626 33.2001 87.5926 26.4401 79.8726 25.6301C72.6126 24.8801 67.2726 29.9801 65.8726 36.9801C65.1026 40.4401 63.5726 46.9801 65.6426 52.6601C66.7926 55.8401 68.2826 58.3701 69.7726 58.8601C71.209 58.8223 72.6418 58.6953 74.0626 58.4801V58.4801C74.0626 58.4801 74.4426 60.6201 74.7126 62.0001C74.9826 63.3801 74.8726 64.1001 72.1326 65.7901C69.3926 67.4801 76.2726 70.9501 80.7726 70.6101C85.2726 70.2701 90.3326 67.5501 91.7726 64.6101C93.2426 61.4401 93.1126 57.6101 91.1526 57.7101Z" fill="#FFCEA9"/>
<path d="M105.433 77.16C105.145 77.5164 104.831 77.8506 104.493 78.16V78.21C103.453 79.0878 102.278 79.7903 101.013 80.29V80.29C100.233 80.5944 99.4154 80.7929 98.5827 80.88L95.9727 78.55C96.5356 78.2757 97.0801 77.9651 97.6027 77.62C99.3552 76.4567 100.908 75.0182 102.203 73.36C102.998 72.3919 103.695 71.3467 104.283 70.24C104.883 73.45 105.353 76.26 105.433 77.16Z" fill="#D5D7E2"/>
<path d="M96.8926 97C95.0826 103.43 96.3926 105.25 96.4826 116.41C93.3326 121.69 80.3626 128.5 72.6626 129.14C64.9626 129.78 58.9426 123.76 58.9426 123.76C58.5026 120.5 58.5526 101.61 59.0526 88.88C59.4926 77.88 60.9126 71.36 64.1426 69.11C65.9089 68.0035 67.7387 67.0018 69.6226 66.11C72.0226 64.92 74.2626 63.9 74.5426 63.77C74.5405 63.79 74.5405 63.8101 74.5426 63.83V63.83C74.6726 64.16 75.5426 65.77 80.3726 64.25C85.6726 62.59 87.6926 60.2 86.9826 58.25C86.987 58.2269 86.987 58.2032 86.9826 58.18C87.2326 58.18 89.1526 57.86 91.3426 57.68C92.2026 57.6 93.1126 57.55 93.9626 57.52C97.1626 57.44 99.4726 58.44 101.133 66.52C103.203 76.24 101.023 82.27 96.8926 97Z" fill="#434B5B"/>
<path d="M46.9428 99.4C53.2628 100.99 54.7528 97.01 55.5828 93.71C57.5828 85.71 58.6828 78.49 60.1828 73.96C61.9428 68.6 63.7928 67.75 66.3928 66.71C69.4528 65.49 72.0728 68.07 71.0628 74.88C69.8528 82.93 68.2828 88.59 65.2628 98.12C64.4828 100.61 62.7128 105.04 60.0728 107.12C56.8128 109.76 51.8928 109.65 44.4628 107.8C41.2928 107.01 37.8128 105.11 31.8128 102.32C30.2028 101.57 28.9528 101.07 25.8628 99.63C22.7606 98.2383 20.0428 96.1141 17.9428 93.44C16.3128 91.09 16.1028 89.99 16.4328 89.44C16.7628 88.89 17.5828 88.92 18.4328 89.9C19.6815 91.5678 21.2233 92.9944 22.9828 94.11C22.9828 94.11 20.9828 92.05 19.9028 90.71C18.9361 89.5186 18.1324 88.2037 17.5128 86.8C16.9428 85.43 18.1228 83.58 19.0128 84.55C19.9028 85.52 20.3428 86.55 22.0128 88.48C22.8758 89.5226 23.8593 90.4591 24.9428 91.27C23.9301 89.8966 23.0273 88.4454 22.2428 86.93C21.5348 85.7487 21.1872 84.3862 21.2428 83.01C21.2428 82.29 22.2928 81.44 23.2428 82.8C24.0928 84.01 24.6528 85.92 26.6328 87.98C28.0828 89.48 29.3128 90.34 29.3428 89.93C29.3728 89.52 28.4728 88.69 27.9528 86.93C27.4328 85.17 27.9528 83.34 28.9528 83.13C29.9528 82.92 29.7328 82.99 30.5028 84.62C31.2728 86.25 32.5028 87.46 33.3728 89.84C33.8651 91.5214 34.7572 93.0585 35.9728 94.32C37.4928 96.06 40.9328 97.89 46.9428 99.4Z" fill="#FFCEA9"/>
<path d="M66.0928 36C66.0928 36 59.4328 25.85 73.8828 23.78C84.3028 22.29 91.0028 28.99 91.7828 36.26C92.5228 43.2 88.2428 50.41 85.1528 53.26C83.6528 53.8 80.4028 54.11 76.1528 52.18C75.9812 50.2885 75.9145 48.3889 75.9528 46.49C75.9528 46.49 81.0228 35.81 66.0928 36Z" fill="#3A4151"/>
<path d="M91.1227 61.13C89.8027 63.78 86.2227 66.2 81.5527 67.59C79.9342 68.0998 78.2496 68.3693 76.5527 68.39C74.0664 68.2074 71.6628 67.4177 69.5527 66.09C71.9527 64.9 74.1927 63.88 74.4727 63.75C75.2827 64.29 77.0127 64.95 80.2427 63.99C83.9827 62.86 86.9327 61.27 86.9127 58.16V58.09C87.1627 58.09 89.0827 57.77 91.2727 57.59C91.5078 58.1552 91.6162 58.7651 91.5903 59.3767C91.5644 59.9883 91.4048 60.5868 91.1227 61.13V61.13Z" fill="#D5D7E2"/>
<path d="M72.7127 77.1801C72.2627 79.5501 71.7127 82.5101 71.1927 84.8001C70.7727 86.9201 70.4427 88.4501 70.4427 88.4501C70.4427 88.4501 68.6327 90.8701 63.5727 89.6401C60.6996 89.0339 58.1668 87.3525 56.4927 84.9401C56.4927 84.9401 56.8227 83.6301 57.3727 81.5501C57.9227 79.4701 58.7327 76.5501 59.6627 73.3001C61.5327 66.9001 64.5127 64.9901 68.7427 65.6201C73.9627 66.3901 73.5927 72.6101 72.7127 77.1801Z" fill="#434B5B"/>
<path d="M71.1927 84.8C70.7727 86.92 70.4427 88.45 70.4427 88.45C70.4427 88.45 68.6327 90.87 63.5727 89.64C60.6996 89.0338 58.1668 87.3525 56.4927 84.94C56.4927 84.94 56.8227 83.63 57.3727 81.55C59.2706 83.5411 61.7356 84.8993 64.4327 85.44C66.6954 85.9715 69.0699 85.7467 71.1927 84.8Z" fill="#D5D7E2"/>
</svg>
</div>


  </div>
  <div className='amazingContainer'>

<ul className='amazing'>
  <li>
    <a href="https://github.com/ChaseYin?tab=repositories" target="blank">
    <FontAwesomeIcon icon={faCat}/>
      <span> - GitHub</span>
    </a>
  </li>
  <li>
    <a href="https://www.deakin.edu.au/" target="blank">
    <FontAwesomeIcon icon={faSchool}/>
      <span> - Deakin</span>
    </a>
  </li>
  <li>
    <a href="http://google.com" target="blank">
    <FontAwesomeIcon icon={faSearch}/>
      <span> - Google</span>
    </a>
  </li>
  <li>
  <a href="https://d2l.deakin.edu.au/d2l/home/881988" target="blank">
    <FontAwesomeIcon icon={faCode}/>
      <span> - SIT313</span>
    </a>
  </li>
  <li>
  

</li>
  
  </ul>
  
</div>

 
    {/* <div className='img-container'><img src="https://i.loli.net/2020/09/24/jkp4oIv38egMGS5.jpg" /><p class="desc">Hey, I'm Chase <FontAwesomeIcon icon={faCarSide} /></p></div> */}
      <ul className="filter">
        <li>
          <form onSubmit={submitHandler}>
            <input icon='search' placeholder='Search...' name="searchKeyword"
              onChange={(e) => setSearchKeyword(e.target.value)} />
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            <button color='blue' type="submit" className='littleBtn'>Search</button>
            {/* <FontAwesomeIcon icon={faCoffee} spin  /> */}
          </form>
        </li>
       


        <li className='selector'>
          {/* 排序{' '} */}
          {/* <select name="sortOrder" onChange={sortHandler} className='dropSize'> */}
          <select name="sortOrder" onChange={(e) => setSortOrder(e.target.value)} className='selector'>
          <option value="">Newest</option>
            <option value="expiry">Expiry</option>
            <option value="lowest">Smallest</option>
            <option value="highest">Hightest</option>
          </select>
        </li>
      </ul>

      
{/* <div id="container">

<h1>CSS3 Animated Buttons</h1>

<button class="highlight"> Highlight</button>
<button class="fade"> Fade</button>
<button class="boom"> Boom</button>

<button class="focus"> Focus</button>
<button class="rotate"> Rotate</button>
<button class="knit"> Knit</button>

<button class="shrink"> Shrink</button>
<button class="squeeze"> Squeeze</button>
<button class="deform"> Deform</button>

</div> */}
      {loading ? (
        <div>Loading</div>
      ) : error ? (
        <div>{error}</div>
      ) : (
        <ul className="products">
          {products.map((product) => (
            <li key={product._id}>
              <div className="product">
                <Link to={'/product/' + product._id}>
                  <img
                    className="product-image"
                    src={product.image||'https://xiaofeng313.s3.amazonaws.com/9d3c9a5f83ec09ab41a85e36e966683f.jpg'}
                    onerror="this.src='https://xiaofeng313.s3.amazonaws.com/9d3c9a5f83ec09ab41a85e36e966683f.jpg';this.onerror=null"
                    alt="product"
                  />
                </Link>
                <div className="product-name">
                
                  <Link to={'/product/' + product._id}><span className='goodFont-3-white'>&nbsp;{product.name}</span></Link>
                </div>
                <div className="product-brand"><span className='goodFont-2-white'>Expiry Date: &nbsp;{product.expiryDate}</span></div>
                <div className="product-brand"><span className='goodFont-2-white'>Type: &nbsp;{product.type}</span></div>
                <div className="product-price"><span className='goodFont-2-white'>${product.price}&nbsp;Per Response</span></div>
                <div className="product-rating">
                  <Rating
                    value={product.rating}
                    text={product.numReviews + ' Comments'}
                    className='goodFont-2-white'
                  />
                </div>
              </div>
            </li>
          ))}
        </ul>






      )}
      </div>
    </>
  );
}
export default HomeScreen;
