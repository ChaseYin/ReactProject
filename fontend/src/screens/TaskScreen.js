import React, { useEffect, useState } from 'react';
import { Link } from 'react-router-dom';
import { useSelector, useDispatch } from 'react-redux';
import { detailsProduct, saveProductReview, saveAnswer, chooseIBM } from '../actions/productActions';
import Rating from '../components/Rating';
import { createOrder } from '../actions/orderActions';

import { PRODUCT_REVIEW_SAVE_RESET } from '../constants/productConstants';
import Axios from 'axios';
import '../css/font.css'
import '../css/myBtn.css'

import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'
import { faCoffee, faBook, faTimesCircle, faAddressBook, faKey, faEnvelope,
  faCarSide,
  faCalendar,
  faUser,
  faCreditCard,
  faMoneyBill,
  faMoneyBillWave,
  faMoneyCheck,
  faMoneyCheckAlt,
  faToolbox,
  faUpload,
  faFireExtinguisher,
  faOutdent,
  faTable,
  faTasks,
  faColumns,
  faSortNumericDown,
  faSortAmountUpAlt,
  faTrash,
  faCashRegister,
  faUserAlt,
  faFileWord,
  faGlobeAsia,
  faSearch,
  faCat,
  faSchool,
  faCodeBranch,
  faCode,
  faMusic,
  faCloud,
  faReceipt,
  faCalendarCheck,
  faCalendarPlus,
  faCalendarWeek,
  faFileAlt,
  faCamera,
  faCameraRetro,
  faQuestion,
  faQuestionCircle

} from '@fortawesome/free-solid-svg-icons'


function TaskScreen(props) {
  var time = 1
  const [firstClass, setFirstClass] = useState('');
  const [qty, setQty] = useState(1);
  const [rating, setRating] = useState(0);
  const [comment, setComment] = useState('');
  const [answer, setAnswer] = useState('');
  const userSignin = useSelector((state) => state.userSignin);
  const { userInfo } = userSignin;
  const productDetails = useSelector((state) => state.productDetails);
  const { product, loading, error } = productDetails;
  const productReviewSave = useSelector((state) => state.productReviewSave);
  const { success: productSaveSuccess } = productReviewSave;
  const dispatch = useDispatch();
  const [imgUrl,setImgUrl] = useState('')
  const [audioText,setAudioText] = useState('')
  const [sentence,setSentence] = useState('')
  const [process,setProcess] = useState('')
  const [show,setShow] = useState('')
  const [showAudioText,setShowAudioText] = useState('')
  const [awsAudio,setAwsAudio] = useState('')
  // const fs = require('fs');
  // const VisualRecognitionV3 = require('ibm-watson/visual-recognition/v3');
  // const { IamAuthenticator } = require('ibm-watson/auth');
  // const visualRecognition = new VisualRecognitionV3({
 
  //   version: '2018-03-19',
  //   authenticator: new IamAuthenticator({
  //   apikey: 'eZQGsxTNsklvBK8_jRD7efK740FwXr8FchPLEx8RTSbQ',
  //   }),
  //   url: 'https://api.us-south.visual-recognition.watson.cloud.ibm.com/instances/e0a692bd-70f1-4809-baf1-213be9e9a8c2',
  // });

 

  // console.log('imgUrl是：'+JSON.stringify(product))

  useEffect(() => {
    if (productSaveSuccess) {
      alert('Comment successfully!.');
      setRating(0);
      setComment('');
      dispatch({ type: PRODUCT_REVIEW_SAVE_RESET });
    }

    dispatch(detailsProduct(props.match.params.id));
    return () => {
      //
    };
  }, [productSaveSuccess]);


  const saveProductAnswer = (e) => {
     //console.log('目前的答案是：'+answer)
     dispatch(
         saveAnswer(product._id, {
             answer: answer
         })
     )
  }

  const visualRec = (e) => {
    Axios
    // .get('/api/products/IBMprocess/' + product._id)
    .get('/api/products/IBMprocess/' + product._id,  {
      headers: {
        'Content-Type': 'multipart/form-data',
      },
    })
    .then((response) => {
      
      var IBMres = JSON.stringify(response)
      var firstIBM = new Array()
      // console.log('长度是'+response.data.images[0].classifiers[0].classes.length)
      for(var i = 0; i < response.data.images[0].classifiers[0].classes.length; i++)
      {
        // console.log(response.data.images[0].classifiers[0].classes[i].class + '  asdasd' + response.data.images[0].classifiers[0].classes[i].score)
        firstIBM.push("Class : "+"   "+response.data.images[0].classifiers[0].classes[i].class+ "   " + "   ")
        firstIBM.push("Similarity---->"+response.data.images[0].classifiers[0].classes[i].score+ "   " + "   "+ "   " + "   "+ "   " + "   ")
      }
      setFirstClass(firstIBM)
      // console.log('获得的分析结果是:'+firstIBM)
      // setFirstClass(response.data.images[0].classifiers[0].classes[0].class)
      // console.log('分析结果是'+response.data.images[0].classifiers[0].classes[0].class)
      setShow('on')
      
    }
    )
    .catch((err) => {
      console.log(err);
    });
 }

 const speechText = (e) => {
  Axios
  .get('/api/products/audioText/' + product._id,  {
    headers: {
      'Content-Type': 'multipart/form-data',
    },
  })
  .then((response) => {
    //var IBMres = JSON.stringify(response)
    console.log(response.data.audioText)
     var IBMtext = new Array()
     IBMtext = response.data.audioText
     setAwsAudio(response.data.audioLink)
     var sentenceArray = new Array()
     for(var i = 0; i < IBMtext.length; i = i + 2)
     {
       sentenceArray.push(IBMtext[i])
       sentenceArray.push('   ')
     }
     var processArray = new Array()
     for(var i = 0; i < IBMtext.length; i = i + 1)
     {
       if(i % 2 == 0)
       {
        
        processArray.push('Word   '+time+' :   ')
        processArray.push(' " ' +IBMtext[i]+' "----->')
        processArray.push('   ')
        time = time + 1
       }
       else{
        processArray.push('Confidence: " ')
        processArray.push(IBMtext[i]+' " ')
        processArray.push('..................')
       }
     }
     console.log(IBMtext)
      setAudioText(IBMtext)
      setShowAudioText('on')
      setSentence(sentenceArray)
      setProcess(processArray)
    // console.log('获得的分析结果是:'+firstIBM)
    // setFirstClass(response.data.images[0].classifiers[0].classes[0].class)
    // console.log('分析结果是'+response.data.images[0].classifiers[0].classes[0].class)
    //setShow('on')
    
  }
  )
  .catch((err) => {
    console.log(err);
  });
}

  const handleAddToCart = () => {
    dispatch(createOrder({
      
    }));
    props.history.push('/cart/' + props.match.params.id + '?qty=' + qty);
  };



  return (
    <div>
      {loading ? (
        <div>Loading</div>
      ) : error ? (
        <div>{error} </div>
      ) : (
        <>
          <div className="task">
            <div className="task-image">
              <img
              src={product.image}
              onerror="this.src='images/default.jpg';this.onerror=null"
              alt="product"></img>
            </div>
            <div className='abc123'>
              <ul>
               
                  <h2 className='font1'><FontAwesomeIcon icon={faTasks}/>&nbsp;&nbsp;Task Name: &nbsp;{product.name}</h2>
                  <h4 className='font1'>{product.question}</h4>
                
                
                <h4 className='font1'><FontAwesomeIcon icon={faCalendarWeek}/>&nbsp;&nbsp;Expiry Date: {JSON.stringify(product.expiryDate)}</h4>
                
            
                  <h4 className='font1'><FontAwesomeIcon icon={faMoneyBillWave}/>&nbsp;&nbsp;Salary: <b>${product.price}</b></h4>
         
            
                  
                  <div className='font1'><FontAwesomeIcon icon={faFileAlt}/>&nbsp;&nbsp;Description:{product.description}</div>
            
              </ul>
            </div>
            </div> 
            
           


            <div className="taskSide">
<ul>
  
  {product.question ? 
  <div>
  <h2 className='font1'><FontAwesomeIcon icon={faQuestion}/>&nbsp;&nbsp;Question Description: {product.question}</h2>
  <input
  className = 'answerInput'
  type="text"
  name="answer"
  value={answer}
  id="answer"
  placeholder="input your answer"
   onChange={(e) => setAnswer(e.target.value)}
></input>

  </div>

  : product.proposition ? 
  <div>
  <h2 className='font1'><FontAwesomeIcon icon={faQuestionCircle}/>&nbsp;&nbsp;Proposition Description: {product.proposition}</h2>
  <input
  className = 'answerInput'
  type="text"
  name="answer"
  value={answer}
  id="answer"
  placeholder="input your answer"
   onChange={(e) => setAnswer(e.target.value)}
></input>

  </div>
  : product.allocate ? 
   <div>
       <h2 className='font1'><FontAwesomeIcon icon={faUserAlt}/>&nbsp;&nbsp;This is an appoint task: {product.proposition}</h2>
  <input
  className = 'answerInput'
  type="text"
  name="answer"
  value={answer}
  id="answer"
  placeholder="input your answer"
  onChange={(e) => setAnswer(e.target.value)}
></input>
   </div>
  : product.type==='imageTask' ?
  <div>
      <h2 className='font1'><FontAwesomeIcon icon={faCameraRetro}/>&nbsp;&nbsp; This is an image task: </h2>
  <span className='font1-1'>Write the objects you recognized : </span><input
  type="text"
  name="answer"
  value={answer}
  id="answer"
 
  className = 'answerInput'
   onChange={(e) => setAnswer(e.target.value)}
></input><br/><br/>
<button id = 'IBMbtn'  className="btn" onClick={visualRec}>
  <span>Choose AI service</span>
</button>

  </div>
  : product.type==='audioTask' ? 
  <div className='taskType'>
      <h3 className='font1'>This is an Audio task &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button className='littleBtn'><a href={product.awsAudio} target='blank'><span className='goodFont-2-white'>Listen Audio In Aws&nbsp;<FontAwesomeIcon icon={faMusic}/></span></a></button>  </h3>
     
   <p className='font1'>Input what your heard in English:</p>
  <input
  className='answerInput'
  type="text"
  name="answer"
  value={answer}
  id="answer"
 
   onChange={(e) => setAnswer(e.target.value)}
  
></input><br/>
<br/>
<button id = 'IBMbtn2' class="btn" onClick={speechText}><span>AI Help (IBM)</span></button>

  </div>
  
  
  :''}
  <br/>
    {product.countInStock > 0 && (
        <Link to={"/result/" + product._id}>
      <button
        onClick={saveProductAnswer}
        className="btnSuccess"
      >
      <span>
       Submit Response
      </span>
      </button>
      </Link>
    )}
 
</ul>
</div>
            { show==='on'? 
           <div className="ibmProcess">
             <span className='font1-1'>{firstClass}</span>
            
            </div>
            : ''}
           { showAudioText==='on'? 
           <div className="ibmProcess">
           <ul>
             <span className='font1'>
               
{/*  -----------------------------------------------------------------------Add svg imges------------------------------------------------------------------------------------------------ */}
             <svg width="100" height="100" viewBox="0 0 61 55" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M18.6 51.0301C18.09 51.1301 17.48 51.35 17.42 51.87C17.35 52.45 18.06 52.79 18.63 52.91C20.78 53.38 23 53.44 25.21 53.5C36.89 53.78 48.57 53.83 60.25 53.64C60.08 52.21 58.3799 51.59 56.9699 51.32C50.9099 50.16 44.64 50.8201 38.69 49.5901C32.42 48.2801 24.79 49.7601 18.6 51.0301Z" fill="url(#paint0_linear)"/>
<path d="M18.6 51.0301C18.09 51.1301 17.48 51.35 17.42 51.87C17.35 52.45 18.06 52.79 18.63 52.91C20.78 53.38 23 53.44 25.21 53.5C36.89 53.78 48.57 53.83 60.25 53.64C60.08 52.21 58.3799 51.59 56.9699 51.32C50.9099 50.16 44.64 50.8201 38.69 49.5901C32.42 48.2801 24.79 49.7601 18.6 51.0301Z" fill="url(#paint1_linear)"/>
<path d="M50.4099 41.61C50.5399 41.57 50.6799 41.61 50.8099 41.65C51.3799 41.84 51.9399 42.09 52.4399 42.42C52.6899 42.58 52.9399 42.76 53.0599 43.03C53.1699 43.28 53.16 43.56 53.14 43.82C52.96 47.04 52.7899 50.27 52.6099 53.49C52.5999 53.7 52.5699 53.93 52.4099 54.06C52.2099 54.21 51.93 54.11 51.71 54.01C49.56 53.07 47.42 52.12 45.27 51.18C44.24 50.73 43.1799 50.25 42.4199 49.42C42.9999 48.14 44.22 47.29 45.34 46.43C47.08 45.09 48.68 43.55 50.09 41.87C50.17 41.77 50.2699 41.65 50.4099 41.61Z" fill="#DDC199"/>
<path d="M60.5399 25.02C60.0099 24.9 59.4699 24.78 58.9399 24.66C55.8199 30.39 53.0599 36.32 50.6799 42.4C51.2299 42.75 51.9599 43.11 52.4899 42.73C52.7099 42.57 52.84 42.31 52.96 42.06C55.66 36.46 58.1899 30.78 60.5399 25.02Z" fill="#BDB39B"/>
<g opacity="0.26">
<path opacity="0.26" d="M50.7099 52.9C50.6999 53.01 50.8699 53.05 50.8899 52.94C51.3199 49.69 51.9298 46.5 52.7198 43.32C52.7698 43.12 52.4598 43.06 52.4098 43.26C51.5898 46.41 51.0199 49.65 50.7099 52.9Z" fill="#272525"/>
<path opacity="0.26" d="M47.3198 51.4699C48.6398 48.6899 50.0398 45.95 51.5198 43.25C51.6098 43.09 51.3498 42.96 51.2598 43.12C49.7198 45.84 48.3298 48.64 47.0598 51.49C47.0798 51.51 47.0898 51.53 47.0998 51.55C47.1698 51.5 47.2398 51.4799 47.3198 51.4699Z" fill="#272525"/>
<path opacity="0.26" d="M45.1699 49.64C47.3799 47.56 49.3499 45.25 51.0699 42.75C51.1799 42.58 50.8999 42.44 50.7899 42.61C49.0999 45.1 47.1599 47.4 44.9899 49.48C44.8799 49.59 45.0599 49.75 45.1699 49.64Z" fill="#272525"/>
</g>
<path d="M29.84 44.46C29.85 44.31 29.87 44.15 29.88 44C28.56 43.1 26.24 43.39 24.84 43.85C23.34 44.34 23.34 45.26 23.36 46.82C23.37 47.7 23.45 48.69 24.13 49.26C24.65 49.7 25.38 49.76 26.06 49.8C26.67 49.84 27.27 49.87 27.88 49.91C28.3 49.93 28.77 49.94 29.1 49.67C29.43 49.39 29.48 48.92 29.52 48.49C29.63 47.14 29.74 45.8 29.84 44.46Z" fill="#2F3F47"/>
<path d="M31.45 44.46C31.44 44.31 31.4199 44.15 31.4099 44C32.7299 43.1 35.05 43.39 36.45 43.85C37.95 44.34 37.9499 45.26 37.9299 46.82C37.9199 47.7 37.8399 48.69 37.1599 49.26C36.6399 49.7 35.9099 49.76 35.2299 49.8C34.6199 49.84 34.0199 49.87 33.4099 49.91C32.9899 49.93 32.5199 49.94 32.1899 49.67C31.8599 49.39 31.81 48.92 31.77 48.49C31.67 47.14 31.56 45.8 31.45 44.46Z" fill="#2F3F47"/>
<path d="M20.1901 41.12C19.8601 41.19 19.54 41.29 19.23 41.42C19 41.51 18.77 41.63 18.61 41.81C18.39 42.07 18.33 42.43 18.29 42.78C18.24 43.24 18.22 43.7 18.23 44.16C18.23 44.55 18.2601 44.95 18.4601 45.28C18.7401 45.74 19.2901 45.95 19.8101 46.08C20.8001 46.33 21.83 46.39 22.85 46.44C29.02 46.74 35.21 46.54 41.35 45.85C41.6 45.82 41.88 45.78 42.05 45.59C42.15 45.48 42.2001 45.33 42.2501 45.19C42.5701 44.17 42.7801 42.78 42.0901 41.83C41.5001 41.02 40.4101 41.48 39.5901 41.47C38.7501 41.46 37.9001 41.39 37.0601 41.36C35.4201 41.29 33.7801 41.22 32.1401 41.17C29.8301 41.09 27.5101 41.02 25.2001 40.96C23.6401 40.93 21.8001 40.76 20.1901 41.12Z" fill="#516770"/>
<path d="M33.45 19.17C37.64 19.19 41.82 19.28 46.01 19.37C45.91 17.14 45.75 14.91 45.27 12.73C44.44 8.91 42.54 5.18003 39.33 2.95003C34.41 -0.469972 26.6 -0.019999 21.3 3.36C19.07 4.78 17.28 6.73001 16.34 9.12001C15.26 11.85 14.97 14.83 14.8 17.76C14.78 18.15 14.76 18.53 14.74 18.92C20.96 18.68 27.22 19.15 33.45 19.17Z" fill="#EAF1F2"/>
<path d="M33.11 20.29C26.97 20.28 20.81 19.84 14.67 20.06C14.37 26.72 14.65 33.41 15.51 40.03C15.63 40.94 15.78 41.89 16.38 42.61C17.31 43.72 18.92 43.23 20.17 43.23C22.28 43.23 24.45 43.32 26.58 43.37C30.6 43.46 34.59 43.47 38.59 43.02C40.49 42.81 44.33 43.39 45.24 41.68C45.99 40.29 45.68 37.47 45.79 35.92C45.92 34.08 46.02 32.25 46.08 30.41C46.19 27.1 46.17 23.79 46.04 20.47C41.74 20.39 37.42 20.29 33.11 20.29Z" fill="#E2ECED"/>
<path d="M47.61 31.07C47.69 31 47.7 30.88 47.71 30.78C47.92 28.01 48.1 25.24 48.23 22.47C48.24 22.23 48.24 21.95 48.05 21.79C47.91 21.68 47.73 21.67 47.55 21.67C46.93 21.66 46.32 21.65 45.7 21.65C45.31 24.8 45.15 27.97 45.23 31.14C45.92 31.14 46.6 31.15 47.29 31.15C47.4 31.15 47.52 31.15 47.61 31.07Z" fill="#2F3F47"/>
<path d="M50.7999 37.45C50.8799 37.22 50.97 36.98 51.15 36.81C51.29 36.68 51.4799 36.6 51.6599 36.54C52.4399 36.26 53.2399 36.05 54.0499 35.91C54.6799 36.34 55.2499 36.85 55.7399 37.44C55.8299 37.55 55.9199 37.67 55.9399 37.81C55.9599 37.92 55.93 38.03 55.9 38.14C55.58 39.37 55.27 40.6 54.95 41.83C54.48 41.89 54.0099 41.9 53.5499 41.84C53.7299 41.09 53.91 40.34 54.08 39.6C54.25 38.89 54.38 38.02 53.84 37.52C53.29 37.66 52.75 37.81 52.2 37.95C52.11 37.97 52.0099 38 51.9299 38.06C51.8399 38.14 51.8 38.26 51.76 38.37C51.53 39.07 51.3599 39.79 51.2399 40.52C50.8899 40.42 50.5399 40.33 50.1899 40.23C50.1599 39.28 50.4799 38.35 50.7999 37.45Z" fill="#2F3F47"/>
<path d="M55.0499 36.37C55.0799 36.34 55.0899 36.3 55.0999 36.27C55.1999 35.82 55.2999 35.37 55.4099 34.93C54.7099 34.77 53.9899 34.66 53.2799 34.6C53.1699 34.97 53.0999 35.36 53.0699 35.75C53.0599 35.83 53.0599 35.93 53.1199 35.99C53.1599 36.03 53.2099 36.04 53.2599 36.06C53.7899 36.22 54.3399 36.34 54.8999 36.41C54.9399 36.4 54.9999 36.41 55.0499 36.37Z" fill="#516770"/>
<path d="M55.75 34.62C56.17 33.91 55.83 32.04 55.83 31.29C55.82 30.26 55.82 29.22 55.58 28.22C55.34 27.22 54.85 26.24 54.04 25.61C53.58 25.25 53.04 25.02 52.48 24.83C50.81 24.26 49.02 24.07 47.27 24.28C47.13 24.3 46.98 24.32 46.88 24.42C46.77 24.52 46.75 24.68 46.73 24.83C46.65 25.4 46.54 26.03 46.57 26.61C46.62 27.63 46.41 27.35 47.15 27.64C47.72 27.86 48.79 27.68 49.44 27.83C50.2 28 50.94 28.26 51.68 28.52C52.15 28.68 52.65 28.88 52.89 29.31C53.02 29.54 53.06 29.82 53.09 30.09C53.27 31.69 53.35 33.3 53.34 34.91C53.34 35.19 55.4 35.05 55.67 34.74C55.7 34.7 55.72 34.66 55.75 34.62Z" fill="#E2ECED"/>
<g opacity="0.15">
<path opacity="0.15" d="M52.25 25.29C52.19 26.25 51.94 27.12 51.56 28C51.49 28.17 51.7 28.3 51.81 28.15C52.41 27.31 52.72 26.31 52.83 25.29C52.87 24.93 52.28 24.92 52.25 25.29Z" fill="#272525"/>
<path opacity="0.15" d="M53.78 25.98C53.61 26.91 53.19 27.52 52.53 28.18C52.44 28.27 52.56 28.42 52.66 28.35C53.11 28.07 53.53 27.89 53.85 27.44C54.15 27.02 54.35 26.57 54.41 26.06C54.45 25.71 53.85 25.63 53.78 25.98Z" fill="#272525"/>
</g>
<path d="M13.69 21.73C13.61 21.8 13.6001 21.92 13.5901 22.02C13.3801 24.79 13.2 27.56 13.07 30.33C13.06 30.57 13.06 30.85 13.25 31.01C13.39 31.12 13.57 31.13 13.75 31.13C14.37 31.14 14.98 31.15 15.6 31.15C15.99 28 16.15 24.83 16.07 21.66C15.38 21.66 14.7 21.65 14.01 21.65C13.9 21.65 13.77 21.65 13.69 21.73Z" fill="#2F3F47"/>
<path d="M5.94 18.32C5.97 18.56 5.99997 18.82 5.90997 19.04C5.83997 19.22 5.71001 19.37 5.57001 19.51C5.00001 20.1 4.38002 20.65 3.71002 21.14C2.95002 21.04 2.21002 20.83 1.52002 20.52C1.39002 20.46 1.24998 20.4 1.16998 20.28C1.10998 20.19 1.08 20.08 1.06 19.97C0.799998 18.73 0.53002 17.48 0.27002 16.24C0.66002 15.98 1.08002 15.76 1.52002 15.6C1.69002 16.35 1.86998 17.1 2.03998 17.85C2.20998 18.56 2.47999 19.4 3.17999 19.6C3.60999 19.23 4.03002 18.86 4.46002 18.49C4.53002 18.43 4.61002 18.36 4.65002 18.27C4.70002 18.16 4.67997 18.03 4.65997 17.91C4.54997 17.18 4.38998 16.46 4.16998 15.75C4.52998 15.68 4.87999 15.61 5.23999 15.54C5.69999 16.39 5.82 17.37 5.94 18.32Z" fill="#2F3F47"/>
<path d="M2.61992 21.17C2.60992 21.21 2.61992 21.25 2.61992 21.28C2.72992 21.73 2.83993 22.17 2.93993 22.62C3.63993 22.45 4.32993 22.23 4.99993 21.97C4.93993 21.59 4.82992 21.21 4.67992 20.85C4.64992 20.77 4.60996 20.69 4.52996 20.66C4.47996 20.64 4.42992 20.65 4.36992 20.66C3.81992 20.75 3.27993 20.89 2.74993 21.07C2.69993 21.09 2.63992 21.12 2.61992 21.17Z" fill="#516770"/>
<path d="M2.76993 23.05C2.69993 23.87 3.83991 25.39 4.17991 26.07C4.63991 26.99 5.10993 27.92 5.76993 28.71C6.42993 29.5 7.29991 30.16 8.30991 30.36C8.87991 30.48 9.4699 30.45 10.0499 30.37C11.7999 30.14 13.4899 29.52 14.9599 28.55C15.0799 28.47 15.1999 28.39 15.2499 28.25C15.2999 28.11 15.2499 27.96 15.2099 27.81C15.0199 27.26 14.8499 26.65 14.5599 26.14C14.0599 25.25 14.3799 25.41 13.5799 25.47C12.9699 25.52 12.0899 26.16 11.4399 26.32C10.6799 26.51 9.89992 26.6 9.12992 26.7C8.63992 26.76 8.09992 26.81 7.68992 26.53C7.46992 26.38 7.3099 26.15 7.1699 25.92C6.2999 24.57 5.5099 23.16 4.7999 21.71C4.6799 21.46 2.89989 22.5 2.78989 22.9C2.77989 22.96 2.76993 23 2.76993 23.05Z" fill="#E2ECED"/>
<g opacity="0.15">
<path opacity="0.15" d="M10.0399 29.85C9.66992 28.96 9.50995 28.07 9.44995 27.11C9.43995 26.92 9.18991 26.9 9.15991 27.09C8.99991 28.11 9.15996 29.14 9.51996 30.1C9.64996 30.45 10.1899 30.19 10.0399 29.85Z" fill="#272525"/>
<path opacity="0.15" d="M8.36992 29.92C8.10992 29.01 8.20993 28.28 8.50993 27.39C8.54993 27.27 8.37992 27.19 8.30992 27.29C8.03992 27.74 7.73995 28.09 7.64995 28.63C7.56995 29.14 7.58994 29.63 7.76994 30.11C7.88994 30.46 8.45992 30.26 8.36992 29.92Z" fill="#272525"/>
</g>
<path d="M17.5301 12.63C17.5401 13.01 17.56 13.4 17.72 13.75C18.13 14.62 19.21 14.9 20.16 15.06C25.59 15.97 31.14 16.28 36.6 15.59C37.32 15.5 38.04 15.39 38.7 15.09C39.36 14.79 39.95 14.28 40.19 13.61C40.34 13.18 40.35 12.72 40.36 12.26C40.37 11.8 40.37 11.33 40.38 10.87C40.38 10.66 40.38 10.45 40.3 10.25C40.21 10.04 40.0301 9.87001 39.8401 9.74001C39.1201 9.25001 38.2101 9.14001 37.3401 9.05001C31.5601 8.47001 25.71 7.96001 19.96 8.74001C19.72 8.77001 19.47 8.81 19.3 8.98C19.21 9.06 19.15 9.17002 19.06 9.25002C18.89 9.38002 18.66 9.37002 18.46 9.44002C17.9 9.62002 17.7 10.31 17.63 10.9C17.55 11.47 17.5201 12.05 17.5301 12.63Z" fill="#2F3F47"/>
<path opacity="0.2" d="M24.77 13.47C24.96 13.12 24.99 12.71 24.95 12.31C24.93 12.07 24.87 11.82 24.72 11.64C24.4 11.26 23.81 11.3 23.32 11.21C22.89 11.39 22.53 11.74 22.35 12.17C22.24 12.43 22.19 12.71 22.22 12.99C22.29 13.56 22.76 14.05 23.32 14.15C23.89 14.27 24.5 13.98 24.77 13.47Z" fill="#EAF1F2"/>
<path opacity="0.2" d="M34.29 13.47C34.48 13.12 34.51 12.71 34.47 12.31C34.45 12.07 34.39 11.82 34.24 11.64C33.92 11.26 33.3301 11.3 32.8401 11.21C32.4101 11.39 32.05 11.74 31.87 12.17C31.76 12.43 31.71 12.71 31.74 12.99C31.81 13.56 32.2801 14.05 32.8401 14.15C33.4001 14.27 34.01 13.98 34.29 13.47Z" fill="#EAF1F2"/>
<defs>
<linearGradient id="paint0_linear" x1="17.4218" y1="51.4149" x2="60.2615" y2="51.4149" gradientUnits="userSpaceOnUse">
<stop stop-color="#4D4D4D"/>
<stop offset="1"/>
</linearGradient>
<linearGradient id="paint1_linear" x1="17.4218" y1="51.4149" x2="60.2615" y2="51.4149" gradientUnits="userSpaceOnUse">
<stop/>
<stop offset="1"/>
</linearGradient>
</defs>
</svg>
{/*  -----------------------------------------------------------------------Add svg imges------------------------------------------------------------------------------------------------ */}

               
               &nbsp;&nbsp;&nbsp;<b>Complete sentence:</b><br/><span className='ibmFont1'>{sentence}</span></span><br/><br/>
             
             <span className='font1'>
             {/* <FontAwesomeIcon icon={faReceipt}/> */}


{/*  -----------------------------------------------------------------------Add svg imges------------------------------------------------------------------------------------------------ */}
             <svg width="100" height="100" viewBox="0 0 56 70" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M27.4701 65.73C25.6201 65.91 23.6801 66.16 22.1801 67.27C21.9601 67.43 21.7501 67.63 21.7101 67.9C21.6401 68.49 22.4401 68.73 23.0401 68.75C33.8101 69.09 44.5801 69.12 55.3501 68.85C55.4901 68.11 54.6601 67.59 53.9601 67.34C45.6501 64.31 36.1101 64.89 27.4701 65.73Z" fill="url(#paint0_linear)"/>
<path d="M27.4701 65.73C25.6201 65.91 23.6801 66.16 22.1801 67.27C21.9601 67.43 21.7501 67.63 21.7101 67.9C21.6401 68.49 22.4401 68.73 23.0401 68.75C33.8101 69.09 44.5801 69.12 55.3501 68.85C55.4901 68.11 54.6601 67.59 53.9601 67.34C45.6501 64.31 36.1101 64.89 27.4701 65.73Z" fill="url(#paint1_linear)"/>
<path d="M21.5101 51.21C20.8601 52.56 21.1501 54.69 21.4401 56.54C21.6601 57.93 22.0401 59.41 23.1401 60.28C23.7601 60.77 24.5301 61.01 25.3001 61.2C28.8201 62.05 32.5701 61.93 36.0201 60.86C36.7101 60.64 37.41 60.38 37.98 59.94C38.89 59.23 39.3801 58.11 39.7401 57.01C40.2301 55.51 41.4401 52.13 39.9401 51.3C38.6201 50.57 34.3801 51.47 32.8001 51.46C31.6001 51.46 30.4 51.44 29.22 51.16C27.87 50.85 26.5501 50.2 25.1901 49.95C23.0901 49.56 22.0201 50.15 21.5101 51.21Z" fill="#2F3F47"/>
<path d="M30.0901 63.15C30.1001 63.03 30.11 62.91 30.12 62.78C29.08 62.07 27.2501 62.3 26.1501 62.66C24.9701 63.04 24.97 63.78 24.98 65C24.99 65.69 25.05 66.48 25.58 66.92C25.99 67.27 26.57 67.31 27.1 67.35C27.58 67.38 28.06 67.41 28.54 67.43C28.87 67.45 29.24 67.46 29.5 67.24C29.76 67.02 29.8 66.64 29.83 66.31C29.92 65.26 30.0001 64.21 30.0901 63.15Z" fill="#2F3F47"/>
<path d="M31.05 63.15C31.04 63.03 31.03 62.91 31.02 62.78C32.06 62.07 33.89 62.3 34.99 62.66C36.17 63.04 36.17 63.78 36.16 65C36.15 65.69 36.09 66.48 35.56 66.92C35.15 67.27 34.57 67.31 34.04 67.35C33.56 67.38 33.08 67.41 32.6 67.43C32.27 67.45 31.9 67.46 31.64 67.24C31.38 67.02 31.34 66.64 31.31 66.31C31.22 65.26 31.14 64.21 31.05 63.15Z" fill="#2F3F47"/>
<path d="M5.85999 13C5.88999 13.25 5.92002 13.51 5.83002 13.75C5.76002 13.94 5.61998 14.09 5.47998 14.24C4.88998 14.85 4.25 15.42 3.56 15.92C2.78 15.81 2.01999 15.6 1.29999 15.28C1.16999 15.22 1.03 15.15 0.940002 15.03C0.870002 14.94 0.850017 14.82 0.830017 14.71C0.560017 13.43 0.29002 12.14 0.0200195 10.86C0.42002 10.59 0.859998 10.37 1.31 10.2C1.49 10.97 1.66998 11.75 1.84998 12.52C2.01998 13.26 2.30003 14.12 3.03003 14.33C3.47003 13.95 3.90998 13.56 4.34998 13.18C4.42998 13.11 4.49999 13.04 4.54999 12.95C4.59999 12.84 4.58 12.71 4.56 12.58C4.45 11.83 4.27999 11.08 4.04999 10.35C4.41999 10.28 4.78002 10.21 5.15002 10.14C5.61002 11.01 5.73999 12.02 5.85999 13Z" fill="#2F3F47"/>
<path d="M2.43993 15.94C2.42993 15.98 2.43994 16.02 2.44994 16.06C2.55994 16.52 2.66996 16.98 2.77996 17.44C3.49996 17.27 4.20995 17.04 4.89995 16.77C4.82995 16.37 4.71994 15.98 4.56994 15.61C4.53994 15.53 4.4899 15.44 4.4099 15.41C4.3599 15.39 4.29993 15.4 4.24993 15.41C3.67993 15.51 3.11995 15.65 2.57995 15.83C2.51995 15.86 2.45993 15.89 2.43993 15.94Z" fill="#2F3F47"/>
<path d="M2.59005 17.88C2.52005 18.73 3.69001 20.3 4.05001 21C4.53001 21.95 5.01002 22.91 5.69002 23.72C6.37002 24.54 7.27002 25.21 8.31002 25.43C8.90002 25.55 9.51001 25.52 10.11 25.44C11.91 25.21 13.66 24.56 15.18 23.56C15.3 23.48 15.43 23.39 15.48 23.25C15.53 23.11 15.48 22.95 15.43 22.8C15.24 22.23 15.05 21.6 14.76 21.08C14.25 20.16 14.57 20.32 13.75 20.39C13.12 20.44 12.22 21.1 11.55 21.27C10.77 21.46 9.96 21.56 9.17 21.66C8.67 21.72 8.11002 21.77 7.69002 21.49C7.46002 21.33 7.30005 21.1 7.15005 20.86C6.25005 19.46 5.43004 18.01 4.71004 16.52C4.59004 16.26 2.75003 17.34 2.63003 17.75C2.60003 17.79 2.59005 17.83 2.59005 17.88Z" fill="#516770"/>
<g opacity="0.15">
<path opacity="0.15" d="M10.1001 24.89C9.72012 23.97 9.55015 23.05 9.50015 22.07C9.49015 21.88 9.23016 21.85 9.20016 22.05C9.03016 23.1 9.20016 24.17 9.57016 25.16C9.69016 25.52 10.2401 25.25 10.1001 24.89Z" fill="#272525"/>
<path opacity="0.15" d="M8.37005 24.96C8.11005 24.02 8.21007 23.27 8.52007 22.36C8.56007 22.24 8.38006 22.15 8.32006 22.26C8.04006 22.72 7.73007 23.09 7.64007 23.64C7.55007 24.16 7.57006 24.67 7.76006 25.17C7.88006 25.52 8.47005 25.32 8.37005 24.96Z" fill="#272525"/>
</g>
<path d="M17.73 16.96C16.37 17.62 16.04 19.39 15.92 20.9C15.14 30.18 15.44 39.56 16.8 48.77C16.97 49.89 17.2101 51.11 18.0901 51.82C18.6601 52.28 19.41 52.44 20.13 52.57C27.46 53.91 35.03 53.92 42.36 52.6C42.6 52.56 42.86 52.51 43.06 52.35C43.33 52.14 43.4301 51.79 43.5101 51.46C46.1401 41.17 45.52 30.37 44.85 19.78C44.83 19.41 44.8 19.03 44.63 18.71C44.42 18.32 44.03 18.06 43.63 17.86C41.35 16.66 38.68 16.56 36.11 16.52C30.59 16.42 25.07 16.47 19.55 16.65C18.93 16.66 18.28 16.69 17.73 16.96Z" fill="#EAF1F2"/>
<path d="M21.5399 14.02C27.5699 15.25 33.73 15.15 39.74 13.73C41.01 13.43 42.38 12.99 43.24 11.56C44.72 9.08997 43.76 4.89998 41.9 3.06998C40.04 1.23998 37.67 1.10995 35.44 1.03995C31.86 0.929952 28.2599 0.819972 24.7199 1.55997C22.6699 1.98997 20.52 2.81995 19.15 5.09995C17.78 7.37995 17.69 11.5 19.44 13.12C20.05 13.69 20.8099 13.87 21.5399 14.02Z" fill="#EAF1F2"/>
<path d="M23.07 63.64C28.06 64.03 33.15 64 38.13 63.55C39.18 63.45 40.31 63.31 41.02 62.86C42.24 62.07 41.45 60.7399 39.91 60.1599C38.37 59.5799 36.41 59.54 34.56 59.51C31.6 59.47 28.62 59.44 25.69 59.68C24 59.82 22.21 60.08 21.08 60.81C19.95 61.54 19.87 62.85 21.32 63.36C21.84 63.53 22.46 63.59 23.07 63.64Z" fill="#EAF1F2"/>
<path d="M24.9501 11.03C28.9301 11.56 32.9801 11.52 36.9501 10.9C37.7901 10.77 38.6901 10.58 39.2501 9.96003C40.2301 8.89003 39.5901 7.07998 38.3701 6.28998C37.1501 5.49998 35.5801 5.43998 34.1101 5.40998C31.7501 5.35998 29.3801 5.31002 27.0401 5.64002C25.6901 5.83002 24.2701 6.17999 23.3701 7.16999C22.4701 8.15999 22.4101 9.94001 23.5601 10.63C23.9701 10.89 24.4701 10.97 24.9501 11.03Z" fill="#2F3F47"/>
<path d="M25.78 17.06C25.28 17.06 24.69 17.12 24.45 17.56C24.33 17.78 24.33 18.04 24.34 18.29C24.51 24.35 24.69 30.42 24.86 36.48C28.69 37.5 32.77 38.52 36.54 37.3C37.05 30.65 37.17 23.98 36.89 17.31C35.33 16.97 33.71 16.98 32.11 17C30.01 17.02 27.9 17.04 25.78 17.06Z" fill="#E2ECED"/>
<path d="M37.23 17.31C37.22 17.17 37.13 17.02 36.99 16.99C35.27 16.64 33.53 16.65 31.79 16.67C29.79 16.69 27.79 16.71 25.79 16.72C24.46 16.76 24.0001 17.32 24.0301 18.63C24.0901 20.61 24.14 22.59 24.2 24.58C24.31 28.54 24.43 32.5099 24.54 36.4699C24.54 36.6199 24.6401 36.75 24.7801 36.79C28.6301 37.82 32.7 38.82 36.63 37.61C36.78 37.56 36.86 37.44 36.87 37.29C37.38 30.65 37.5 23.98 37.23 17.31ZM36.24 37.05C32.57 38.1 28.79 37.1799 25.2 36.2199C25.11 33.0399 25.02 29.86 24.93 26.68C24.88 25.05 24.84 23.42 24.79 21.78C24.77 20.96 24.74 20.15 24.72 19.33C24.71 18.98 24.7 18.63 24.69 18.28C24.67 17.59 25.23 17.4 25.8 17.38C27.58 17.36 29.36 17.35 31.14 17.33C32.96 17.31 34.8 17.25 36.6 17.58C36.83 24.08 36.72 30.57 36.24 37.05Z" fill="#2F3F47"/>
<path opacity="0.2" d="M31.59 35.5C31.68 35.36 31.73 35.21 31.78 35.06C31.84 34.85 31.89 34.63 31.85 34.41C31.82 34.24 31.73 34.09 31.64 33.93C31.61 33.88 31.58 33.82 31.55 33.77C31.5 33.69 31.46 33.6 31.39 33.53C31.22 33.34 30.95 33.28 30.7 33.23C30.52 33.2 30.34 33.17 30.15 33.19C29.74 33.24 29.39 33.55 29.25 33.94C29.11 34.32 29.16 34.76 29.33 35.13C29.55 35.6 30 35.99 30.52 36.03C30.95 36.06 31.37 35.85 31.59 35.5Z" fill="#272525"/>
<path d="M31.3 35.44C31.39 35.3 31.44 35.15 31.49 35C31.55 34.79 31.6 34.57 31.56 34.35C31.53 34.18 31.44 34.03 31.36 33.87C31.33 33.82 31.3 33.76 31.27 33.71C31.22 33.63 31.18 33.54 31.11 33.47C30.94 33.28 30.67 33.22 30.42 33.17C30.24 33.14 30.06 33.11 29.87 33.13C29.46 33.18 29.1099 33.49 28.9699 33.88C28.8299 34.27 28.88 34.7 29.05 35.07C29.27 35.54 29.72 35.93 30.24 35.97C30.66 36.01 31.08 35.79 31.3 35.44Z" fill="#83959E"/>
<path opacity="0.2" d="M30.49 34.79C30.57 34.68 30.58 34.55 30.58 34.42C30.58 34.38 30.58 34.33 30.57 34.29C30.55 34.23 30.5 34.18 30.44 34.14C30.27 34.03 30.03 34.02 29.85 34.13C29.68 34.24 29.58 34.48 29.65 34.67C29.76 34.79 29.89 34.89 30.05 34.93C30.21 34.96 30.39 34.92 30.49 34.79Z" fill="black"/>
<path opacity="0.2" d="M31.6801 50.08C31.7701 49.94 31.8201 49.79 31.8701 49.64C31.9301 49.43 31.9801 49.21 31.9401 48.99C31.9101 48.82 31.8201 48.67 31.7401 48.51C31.7101 48.46 31.6801 48.4 31.6501 48.35C31.6001 48.27 31.5601 48.18 31.4901 48.11C31.3201 47.92 31.0501 47.86 30.8001 47.81C30.6201 47.78 30.4401 47.75 30.2501 47.77C29.8401 47.82 29.4901 48.13 29.3501 48.52C29.2101 48.9 29.2601 49.34 29.4301 49.71C29.6501 50.18 30.1001 50.57 30.6201 50.61C31.0301 50.65 31.4601 50.44 31.6801 50.08Z" fill="#272525"/>
<path d="M31.3901 50.03C31.4801 49.89 31.5301 49.74 31.5801 49.59C31.6401 49.38 31.6901 49.16 31.6501 48.94C31.6201 48.77 31.53 48.62 31.44 48.46C31.41 48.41 31.38 48.35 31.35 48.3C31.3 48.22 31.26 48.13 31.19 48.06C31.02 47.87 30.75 47.81 30.5 47.76C30.32 47.73 30.1401 47.7 29.9501 47.72C29.5401 47.77 29.19 48.08 29.05 48.47C28.91 48.85 28.96 49.29 29.13 49.66C29.35 50.13 29.8 50.52 30.32 50.56C30.74 50.59 31.1701 50.38 31.3901 50.03Z" fill="#83959E"/>
<path opacity="0.2" d="M30.5801 49.38C30.6601 49.27 30.6601 49.14 30.6701 49.01C30.6701 48.97 30.6701 48.92 30.6601 48.88C30.6401 48.82 30.5901 48.77 30.5301 48.73C30.3601 48.62 30.1201 48.61 29.9401 48.72C29.7701 48.83 29.6701 49.07 29.7401 49.26C29.8501 49.38 29.9801 49.48 30.1401 49.52C30.2901 49.55 30.4801 49.51 30.5801 49.38Z" fill="black"/>
<path d="M45.2401 36.52C45.3701 36.3 45.5001 36.08 45.7101 35.94C45.8801 35.83 46.0801 35.8 46.2801 35.76C47.1201 35.63 47.9701 35.57 48.8201 35.58C49.3801 36.13 49.8601 36.77 50.2401 37.46C50.3101 37.59 50.3801 37.73 50.3801 37.87C50.3801 37.98 50.3301 38.09 50.2801 38.2C49.7201 39.39 49.16 40.57 48.6 41.76C48.12 41.74 47.64 41.65 47.17 41.5C47.49 40.78 47.8201 40.05 48.1401 39.33C48.4501 38.64 48.75 37.79 48.3 37.18C47.72 37.22 47.14 37.26 46.55 37.3C46.45 37.31 46.3401 37.31 46.2601 37.36C46.1501 37.42 46.0901 37.53 46.0301 37.64C45.6601 38.31 45.3501 39.0099 45.0901 39.7199C44.7501 39.5599 44.4201 39.39 44.0801 39.23C44.2301 38.26 44.7401 37.38 45.2401 36.52Z" fill="#2F3F47"/>
<path d="M49.75 36.25C49.78 36.23 49.8 36.19 49.82 36.15C50.01 35.72 50.2 35.28 50.39 34.85C49.71 34.55 49.01 34.3 48.29 34.1C48.1 34.46 47.96 34.83 47.85 35.22C47.83 35.3 47.81 35.4 47.86 35.47C47.89 35.52 47.94 35.54 47.99 35.57C48.5 35.84 49.03 36.06 49.58 36.24C49.63 36.26 49.7 36.28 49.75 36.25Z" fill="#2F3F47"/>
<path d="M50.8 34.61C51.36 33.98 51.3801 32.02 51.5201 31.25C51.7101 30.21 51.91 29.15 51.86 28.09C51.81 27.03 51.5101 25.95 50.8101 25.15C50.4101 24.7 49.9101 24.35 49.3801 24.06C47.8001 23.16 46.0201 22.62 44.2101 22.49C44.0701 22.48 43.91 22.48 43.79 22.55C43.66 22.63 43.6001 22.79 43.5601 22.94C43.3701 23.51 43.14 24.12 43.05 24.71C42.9 25.75 42.7401 25.42 43.4401 25.87C43.9701 26.21 45.09 26.23 45.73 26.5C46.47 26.82 47.17 27.23 47.86 27.63C48.3 27.89 48.7701 28.1799 48.9401 28.6599C49.0301 28.9199 49.01 29.21 48.99 29.49C48.86 31.15 48.6401 32.8 48.3101 34.43C48.2501 34.71 50.3701 34.96 50.7101 34.71C50.7301 34.68 50.76 34.65 50.8 34.61Z" fill="#516770"/>
<g opacity="0.15">
<path opacity="0.15" d="M49.0501 24.49C48.8001 25.45 48.3801 26.29 47.8301 27.11C47.7201 27.27 47.9201 27.45 48.0601 27.31C48.8301 26.57 49.3401 25.62 49.6401 24.61C49.7501 24.23 49.1501 24.11 49.0501 24.49Z" fill="#272525"/>
<path opacity="0.15" d="M50.47 25.47C50.11 26.38 49.5801 26.92 48.7801 27.46C48.6701 27.53 48.7601 27.71 48.8801 27.66C49.3901 27.46 49.8501 27.36 50.2601 26.97C50.6401 26.61 50.9401 26.18 51.0901 25.68C51.2001 25.33 50.6 25.13 50.47 25.47Z" fill="#272525"/>
</g>
<defs>
<linearGradient id="paint0_linear" x1="21.7084" y1="67.0417" x2="55.3672" y2="67.0417" gradientUnits="userSpaceOnUse">
<stop stop-color="#4D4D4D"/>
<stop offset="1"/>
</linearGradient>
<linearGradient id="paint1_linear" x1="21.7084" y1="67.0417" x2="55.3672" y2="67.0417" gradientUnits="userSpaceOnUse">
<stop/>
<stop offset="1"/>
</linearGradient>
</defs>
</svg>
{/*  -----------------------------------------------------------------------Add svg imges------------------------------------------------------------------------------------------------ */}{/*  -----------------------------------------------------------------------Add svg imges------------------------------------------------------------------------------------------------ */}



&nbsp;&nbsp;&nbsp;&nbsp;

            IBM Process:<br/>
               <span className='font1-1'>
                 
               {process}
               </span>
               </span>
      
            
           </ul>

           
   
 
  
         </div>
          : ''}
           
       



          
          <span className='goodFont'><Link to="/">Return Home</Link></span>




        </>
      )}










    </div>
  );
}
export default TaskScreen;


